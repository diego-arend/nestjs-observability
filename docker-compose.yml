version: '3.8'

services:
  nest-app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - '${PORT}:${PORT}'
    env_file:
      - .env
    volumes:
      - ./src:/usr/src/app/src
      - ./test:/usr/src/app/test
      - ./package.json:/usr/src/app/package.json
      - ./pnpm-lock.yaml:/usr/src/app/pnpm-lock.yaml
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./nest-cli.json:/usr/src/app/nest-cli.json
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_started
      tempo:
        condition: service_started

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - monitoring
    restart: unless-stopped

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    user: '0'
    command: ['-config.file=/etc/tempo.yaml']
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
      - tempo_data:/tmp/tempo
    ports:
      - '3200:3200'
      - '4318:4318'
    networks:
      - monitoring
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3030:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus
      - tempo

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:
  tempo_data:
